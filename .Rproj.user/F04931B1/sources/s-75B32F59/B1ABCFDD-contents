---
title: "clustering_binary"
author: "Roberto Olayo"
date: "6/7/2021"
output: html_document
---

```{r setup, include=FALSE}
library(tidyverse)
```

Read in the data
```{r}
salm_features <- read_tsv("../data/salmonella_data/pathogenex/genome_info/GCA_000210855.2_ASM21085v2/merged_features.tsv") %>% 
  mutate(organism="Salmonella",
         gene_name=paste0(locus_tag, "-Salmonella")) %>% 
  select(gene_name, `# feature`, symbol)

camp_features <- read_tsv("../data/cjejuni_data/pathogenex/genome_info/GCA_000015525.1_ASM1552v1/merged_features.tsv") %>% 
  mutate(organism="Campylobacter",
         gene_name=paste0(locus_tag, "-Campylobacter")) %>% 
  select(gene_name, `# feature`, symbol)

genomic_features <- bind_rows(camp_features, salm_features)
```



```{r}
salmonella_de <- read_tsv("../data/salmonella_data/pathogenex/counts/de_results.tsv") %>% 
  rename(locus_tag = gene_name) %>% 
  mutate(gene_name = paste0(locus_tag, "-Salmonella")) %>% 
  left_join(salm_features, by="gene_name")

cjejuni_de <- read_tsv("../data/cjejuni_data/pathogenex/counts/de_results.tsv") %>% 
  rename(locus_tag = gene_name) %>% 
  mutate(gene_name = paste0(locus_tag, "-Campylobacter")) %>% 
  left_join(camp_features, by="gene_name")
```

Join the data
```{r}
cj_matrix <- cjejuni_de %>% 
  select(gene_name, condition, de_vector) %>% 
  pivot_wider(names_from = condition, values_from=de_vector)

st_matrix <- salmonella_de %>% 
  select(gene_name, condition, de_vector) %>% 
  pivot_wider(names_from = condition, values_from=de_vector)

joint_de.matrix <- bind_rows(cj_matrix, st_matrix) %>% 
  column_to_rownames("gene_name")
joint_de.matrix
```

```{r}
rows_all_zero <- apply(joint_de.matrix, 1, function(x){all(x == 0)})
joint_de <- joint_de.matrix[!rows_all_zero,] %>% 
  rownames_to_column("gene_name")

joint_de
```
# A cosine distance
```{r}
# Columns must be genes genes!!
correlated_distance <- function(X, method=c("cosine", "pearson"), apply_correction=FALSE){
  
  if(method=="cosine"){
    X.t <- t(X) # Rows are genes
    sim <- X.t / sqrt(rowSums(X.t * X.t))
    sim <- sim %*% t(sim)
    diag(sim) <- 1
    
  }else if(method=="pearson"){
    sim <- cor(X, method = "pearson")
  }
  
  dist.mat <- 1 - sim
  
  if(apply_correction){
    dist.mat <- sqrt(dist.mat * 0.5) # comes from https://arxiv.org/pdf/1208.3145.pdf
  }
  
  
  dist.obj <- as.dist(dist.mat)
  
  return(list("dist_obj"=dist.obj, "dist_mat"=dist.mat))
}
```


# Let's do an attempt in two conditions

First let's compare what the point look like in logFC space and how they look in DE space

```{r}
cj_matrix.fc <- cjejuni_de %>% 
  select(gene_name, condition, log2FC.shrink) %>% 
  pivot_wider(names_from = condition, values_from=log2FC.shrink)


st_matrix.fc <- salmonella_de %>% 
  select(gene_name, condition, log2FC.shrink) %>% 
  pivot_wider(names_from = condition, values_from=log2FC.shrink)

 joint_fc <- bind_rows(cj_matrix.fc, st_matrix.fc) %>% 
   filter(gene_name %in% joint_de$gene_name)
```

Let's filter out genes that have zeros in As and Hyp

```{r}
rows_all_zero <- apply(joint_de.matrix %>% select(As, Hyp), 1, function(x){all(x == 0)})
joint_as.hyp.de <- joint_de.matrix[!rows_all_zero,] %>% 
  select(As, Hyp) %>% 
  rownames_to_column("gene_name")

joint_as.hyp.fc <- joint_fc %>% 
  filter(gene_name %in% joint_as.hyp.de$gene_name)
```

```{r}
ggplot(joint_as.hyp.de, aes(x=As, y=Hyp)) +
  geom_point() +
  geom_hline(yintercept = 0, color="blue") +
  geom_vline(xintercept = 0, color="blue")

ggplot(joint_as.hyp.fc, aes(x=As, y=Hyp)) +
  geom_point(color=alpha("darkgrey", 0.7)) +
  geom_hline(yintercept = 0, color="blue") +
  geom_vline(xintercept = 0, color="blue")
```

### Some clustering attemps with diifferent distances.

```{r}
joint.cosine <- correlated_distance(t(joint_as.hyp.de %>% column_to_rownames("gene_name")), method = "cosine", apply_correction = T)$dist_obj
joint.euclidean <- dist(t(joint_as.hyp.de %>% column_to_rownames("gene_name")), method = "euclidean")
joint.manhattan <- dist(joint_as.hyp.de %>% column_to_rownames("gene_name"), method = "manhattan")


k=8
h.cosine <- hclust(joint.cosine, method = "ward.D2")
h.manhattan <- hclust(joint.manhattan, method = "ward.D2")
plot(h.cosine, labels=rep("", nrow(joint_as.hyp.de)))
rect.hclust(h.cosine , k = k)


plot(h.manhattan)
```

```{r}
pheatmap::pheatmap(joint_as.hyp.de %>% column_to_rownames("gene_name"),
                   cluster_rows = h.cosine,
                   cluster_cols = F,
                   show_rownames = F,
                   cutree_rows = k)


pheatmap::pheatmap(joint_as.hyp.de %>% column_to_rownames("gene_name"),
                   cluster_rows = h.manhattan,
                   cluster_cols = F,
                   show_rownames = F,
                   cutree_rows = k)
```
  
```{r}
cut.cosine <- cutree(h.cosine, k=8)
cluster_info <- data.frame(gene_name=names(cut.cosine),
           cluster=cut.cosine)

joint_as.hyp.fc %>% 
  left_join(cluster_info, by="gene_name") %>% 
  mutate(cluster=factor(cluster, levels = 1:max(cluster_info$cluster))) %>% 
  ggplot(aes(x=As, y=Hyp, color=cluster)) +
  geom_point() +
  geom_hline(yintercept = 0, color="blue") +
  geom_vline(xintercept = 0, color="blue")

joint_as.hyp.fc %>% 
  left_join(cluster_info, by="gene_name") %>% 
  mutate(cluster=factor(cluster, levels = 1:max(cluster_info$cluster)),
         Ctrl=0) %>% 
  gather(As, Hyp, Ctrl, key = "condition", value="logFC") %>% 
  mutate(condition=factor(condition, levels = c("Ctrl", "As", "Hyp"))) %>% 
  ggplot(aes(x=condition, y=logFC, group=gene_name)) +
  geom_line(color=alpha("grey", 0.7)) +
  facet_wrap(~ cluster)
```

# Honestly clustering isn't even necessarry
How may patterns are there and how many genes?
```{r}
pattern_count <- plyr::ddply(joint_de, plyr::.(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic), nrow)

barplot(sort(pattern_count$V1))
summary(pattern_count$V1)
```
Uy, there are 3,000 combinations. Can we say something about their size?

Seems like most patterns only contain one gene. what happens if we remove those?
We have 824 patterns if we remove patterns that only have one gene. What if re require at least 4 genes? We 188 genes. Let's say 10 genes-aja 53 genes.
Let's say 20- we get 23 patterns. Let's go to 15? 31 rows. I like this number!
```{r}
pattern_count_filt <- pattern_count[pattern_count$V1 > 15,]

pattern_g <- pattern_count_filt %>% 
  mutate("Ctrl" = 0,
         "Pattern" = paste0(1:nrow(pattern_count_filt), "- ", V1, " genes")) %>% 
  gather(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, Ctrl, 
         key = "condition", value="DE") %>% 
  mutate(condition = factor(condition, levels=c("Ctrl","As", "Bs", "Hyp", "Li", "Nd", "Ns", "Oss", "Oxs", "Sp", "Tm", "Vic")),
         DE_fctr=factor(DE, levels = c(1,0,-1))) %>% 
  ggplot(aes(x=condition, y=DE, group=Pattern, color=DE_fctr)) +
  geom_line(color=alpha("black", 0.5)) +
  geom_point() +
  facet_wrap(~ Pattern) +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90))

ggsave("../data/figures/DE_patterns_min15.pdf", pattern_g, width = 13.91, height = 6.95)
```



# Separate by gene type (CDS and sRNA)  


```{r}
joint_de.cds <- joint_de %>% 
  left_join(genomic_features, by="gene_name") %>% 
  filter(`# feature` == "CDS")

joint_de.srna <- joint_de %>% 
  left_join(genomic_features, by="gene_name") %>% 
  filter(`# feature` %in% c("sRNA", "sRNA_candidate"))

dim(joint_de.srna)
```


### CDS to start

There are 2,922 different patterns to start us off. 
As expected most of these patterns are only composed of one gene
```{r}
pattern_count <- plyr::ddply(joint_de.cds, plyr::.(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic), nrow)

barplot(sort(pattern_count$V1))
summary(pattern_count$V1)
```
If we use a cutoff of 15 we get 28 patterns. Not bad
If we use 10 genes we get 51 patterns. Too big
```{r}
pattern_count_filt <- pattern_count[pattern_count$V1 > 15,]


pattern_g <- pattern_count_filt %>% 
  mutate("Ctrl" = 0,
         "Pattern" = paste0(1:nrow(pattern_count_filt), "- ", V1, " genes")) %>% 
  gather(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, Ctrl, 
         key = "condition", value="DE") %>% 
  mutate(condition = factor(condition, levels=c("Ctrl","As", "Bs", "Hyp", "Li", "Nd", "Ns", "Oss", "Oxs", "Sp", "Tm", "Vic")),
         DE_fctr=factor(DE, levels = c(1,0,-1))) %>% 
  ggplot(aes(x=condition, y=DE, group=Pattern, color=DE_fctr)) +
  geom_line(color=alpha("black", 0.5)) +
  geom_point() +
  facet_wrap(~ Pattern) +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90))

ggsave("../data/figures/DE_patterns_min15_CDS.pdf", pattern_g, width = 13.91, height = 6.95)
```

  
Let's try to get the cluster assignment
```{r}
pattern_filt_df <- pattern_count_filt %>% 
  mutate("Pattern" = paste0(1:nrow(pattern_count_filt), "- ", V1, " genes"),
         "Pattern_str" = paste(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, sep=",")) %>% 
  select(Pattern, Pattern_str)

pattern_info <- joint_de.cds %>% 
  mutate("Pattern_str" = paste(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, sep=",")) %>% 
  left_join(pattern_filt_df, by="Pattern_str") %>% 
  filter(!is.na(Pattern)) %>% 
  select(gene_name, Pattern)

cluster_plot <- joint_fc %>% 
  right_join(pattern_info, by="gene_name") %>% 
  mutate(organism=sapply(gene_name, function(x){tail(strsplit(x, "-")[[1]], n=1)}),
         Ctrl=0) %>% 
  gather(Ctrl,As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic,
         key="condition", value="logFC") %>% 
  mutate(condition=factor(condition, levels=c("Ctrl","As", "Bs", "Hyp", "Li", "Nd", "Ns", "Oss", "Oxs", "Sp", "Tm", "Vic")))
```

Very pretty!
```{r}
salm_plot_data <- cluster_plot %>% 
  filter(organism=="Salmonella")
camp_plot_data <- cluster_plot %>% 
  filter(organism=="Campylobacter")

campy_highlight <- ggplot() +
  geom_line(data=salm_plot_data, aes(x=condition, y=logFC, group=gene_name),
            color=alpha("grey", 0.5)) +
  geom_line(data=camp_plot_data, aes(x=condition, y=logFC, group=gene_name),
            color=alpha("steelblue", 0.5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  facet_wrap(~ Pattern, scales="free")

ggsave("../data/figures/logFC_patterns_min15_CDS.pdf",campy_highlight,width = 13.91, height = 6.95)
```


## Now let's do sRNAs. These worry me a bit.

```{r}
pattern_count <- plyr::ddply(joint_de.srna, plyr::.(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic), nrow)

barplot(sort(pattern_count$V1))
summary(pattern_count$V1)
```
If we require more than one gene we get 31 patterns. I think we can work with that
```{r}
pattern_count_filt <- pattern_count[pattern_count$V1 > 1,]

pattern_g <- pattern_count_filt %>% 
  mutate("Ctrl" = 0,
         "Pattern" = paste0(1:nrow(pattern_count_filt), "- ", V1, " genes")) %>% 
  gather(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, Ctrl, 
         key = "condition", value="DE") %>% 
  mutate(condition = factor(condition, levels=c("Ctrl","As", "Bs", "Hyp", "Li", "Nd", "Ns", "Oss", "Oxs", "Sp", "Tm", "Vic")),
         DE_fctr=factor(DE, levels = c(1,0,-1))) %>% 
  ggplot(aes(x=condition, y=DE, group=Pattern, color=DE_fctr)) +
  geom_line(color=alpha("black", 0.5)) +
  geom_point() +
  facet_wrap(~ Pattern) +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90))

ggsave("../data/figures/DE_patterns_min1_srna.pdf", pattern_g, width = 13.91, height = 6.95)
```


```{r}
pattern_filt_df <- pattern_count_filt %>% 
  mutate("Pattern" = paste0(1:nrow(pattern_count_filt), "- ", V1, " genes"),
         "Pattern_str" = paste(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, sep=",")) %>% 
  select(Pattern, Pattern_str)

pattern_info <- joint_de.srna %>% 
  mutate("Pattern_str" = paste(As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic, sep=",")) %>% 
  left_join(pattern_filt_df, by="Pattern_str") %>% 
  filter(!is.na(Pattern)) %>% 
  select(gene_name, Pattern)

cluster_plot.srna <- joint_fc %>% 
  right_join(pattern_info, by="gene_name") %>% 
  mutate(organism=sapply(gene_name, function(x){tail(strsplit(x, "-")[[1]], n=1)}),
         Ctrl=0) %>% 
  gather(Ctrl,As, Bs, Hyp, Li, Nd, Ns, Oss, Oxs, Sp, Tm, Vic,
         key="condition", value="logFC") %>% 
  mutate(condition=factor(condition, levels=c("Ctrl","As", "Bs", "Hyp", "Li", "Nd", "Ns", "Oss", "Oxs", "Sp", "Tm", "Vic")))
```

```{r}
salm_plot_data <- cluster_plot.srna %>% 
  filter(organism=="Salmonella")
camp_plot_data <- cluster_plot.srna %>% 
  filter(organism=="Campylobacter")

campy_highlight <- ggplot() +
  geom_line(data=salm_plot_data, aes(x=condition, y=logFC, group=gene_name),
            color=alpha("grey", 0.5)) +
  geom_line(data=camp_plot_data, aes(x=condition, y=logFC, group=gene_name),
            color=alpha("steelblue", 0.5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  facet_wrap(~ Pattern, scales="free")

ggsave("../data/figures/logFC_patterns_min1_srna.pdf",campy_highlight,width = 13.91, height = 6.95)
```








  





















